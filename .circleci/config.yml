version: 2
jobs:
  build:
    working_directory: /usr/app
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --file environment/Dockerfile -t codingpirates/forenings-medlemmer .
      - run:
          name: Save docker image
          command: |
            mkdir -p /tmp
            docker save -o /tmp/images.tar codingpirates/forenings-medlemmer
      - run:
          name: Save docker-compose file
          command: |
            cp docker-compose.test.yml /tmp/
      - persist_to_workspace:
          root: /tmp
          paths:
            - images.tar
            - docker-compose.test.yml
  test:
    working_directory: /usr/app
    docker:
      - image: docker:stable-git
    steps:
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install docker-compose
      - attach_workspace:
          at: /tmp
      - run:
          name: Load docker image
          command: |
            docker load -i /tmp/images.tar
      - run:
          name: Setup test environment
          command: |
            cp /tmp/docker-compose.test.yml .
            docker-compose -f ./docker-compose.test.yml up -d
      - run:
          name: Install test packages
          command: |
            docker exec forenings_medlemmer pip install flake8 unittest-xml-reporting coverage
      - run:
          name: Run tests
          command: |
            docker exec forenings_medlemmer mkdir -p target/test-reports
            docker exec forenings_medlemmer bash -c 'DJANGO_SETTINGS_MODULE="forenings_medlemmer.settings_test" coverage run manage.py test --no-input'
      - run:
          name: Create coverage report
          command: |
            docker exec forenings_medlemmer coverage html
      - run:
          name: Run flake8 linting
          command: |
            docker exec forenings_medlemmer mkdir -p target/lint
            docker exec forenings_medlemmer flake8 --output-file=target/lint/flake8 .
          when: always
      - run:
          name: Tear down test environment
          command: |
            docker cp forenings_medlemmer:/usr/app/target .
            docker-compose -f ./docker-compose.test.yml down
          when: always
      - store_artifacts:
          path: target
          destination: artifacts
      - store_test_results:
          path: target/test-reports

workflows:
  version: 2
  on_commit:
    jobs:
      - build
      - test:
          requires:
            - build



#  deploy:
#    working_directory: /usr/app
#    docker:
#      - image: docker:stable-git
#    steps:

#      - deploy:
#          name: Push application Docker image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#              docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#            fi

